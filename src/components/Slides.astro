---
import fs from "node:fs/promises";
import path from "node:path";
import { Typst } from "astro-typst/src/components";

interface Params {
    filePath: string;
}
const { filePath } = Astro.props;
---

<div class="slides-container">
    <Typst
        src={filePath}
        remPx={10}
        props={{ width: "100%", height: "100%" }}
    />
</div>

<style is:global>
    .slides-container {
        text-align: center;
        width: 95%;
        margin: 0 auto;
    }
    .typst-doc {
        margin: auto 0;
    }
    body.slides-active {
        overflow: hidden;
    }
    .slides-container.slides-active {
        overflow: hidden;
        height: 100vh;
    }
</style>
<script is:inline>
    document.addEventListener("DOMContentLoaded", () => {
        const isWiderThanTall = window.innerWidth > window.innerHeight;

        if (isWiderThanTall) {
            let pageNumber = 0; // Default page number (0-based index)

            const typstPages = document.querySelectorAll(".typst-page");
            const typstPagesArray = Array.from(typstPages);
            const typstDoc = document.querySelector(".typst-doc");
            const slidesContainer = document.querySelector(".slides-container");

            typstDoc.setAttribute("height", "100vh");

            function showPage(pageNumber) {
                typstPagesArray.forEach((page, index) => {
                    if (index === pageNumber) {
                        page.style.display = "block";
                        page.setAttribute("transform", "translate(0, 0)");
                        const pageWidth = page.getAttribute("data-page-width");
                        const pageHeight =
                            page.getAttribute("data-page-height");
                        typstDoc.setAttribute(
                            "viewBox",
                            `0 0 ${pageWidth} ${pageHeight}`,
                        );
                    } else {
                        page.style.display = "none";
                        page.setAttribute("transform", "translate(0, -10000)");
                    }
                });
            }

            showPage(pageNumber); // Show the default page

            console.log(
                `Number of typst-page instances: ${typstPagesArray.length}`,
            );
            console.log(typstPagesArray);

            // Hide header and footer when this component is active
            const header = document.querySelector("header");
            const footer = document.querySelector("footer");

            if (header) header.style.display = "none";
            if (footer) footer.style.display = "none";

            // Add a class to the body and slides-container to indicate the component is active
            document.body.classList.add("slides-active");
            slidesContainer.classList.add("slides-active");

            // Add event listener for keydown events
            document.addEventListener("keydown", (event) => {
                if (
                    event.key === "ArrowRight" ||
                    event.key === "ArrowDown" ||
                    event.key === "j" ||
                    event.key === " " // Space key
                ) {
                    // Go to the next slide
                    if (pageNumber < typstPagesArray.length - 1) {
                        pageNumber++;
                        showPage(pageNumber);
                    }
                } else if (
                    event.key === "ArrowLeft" ||
                    event.key === "ArrowUp" ||
                    event.key === "k" ||
                    (event.key === " " && event.shiftKey) // Shift + Space key
                ) {
                    // Go to the previous slide
                    if (pageNumber > 0) {
                        pageNumber--;
                        showPage(pageNumber);
                    }
                }
            });

            // Clean up when the component is no longer active
            window.addEventListener("beforeunload", () => {
                if (header) header.style.display = "";
                if (footer) footer.style.display = "";
                document.body.classList.remove("slides-active");
                slidesContainer.classList.remove("slides-active");
            });
        }
    });
</script>
